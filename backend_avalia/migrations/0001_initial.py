# Generated by Django 5.1.2 on 2024-11-04 16:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_admin', models.CharField(max_length=255)),
                ('sobrenome_admin', models.CharField(max_length=255)),
                ('email_admin', models.EmailField(max_length=255, unique=True)),
                ('senha_admin', models.CharField(max_length=255)),
                ('setor', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_aluno', models.CharField(max_length=255)),
                ('sobrenome_aluno', models.CharField(max_length=255)),
                ('inep_aluno', models.CharField(max_length=12, unique=True)),
                ('data_nascimento', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_prova', models.CharField(max_length=255)),
                ('disciplina', models.CharField(max_length=255)),
                ('semestre', models.IntegerField()),
                ('ano', models.IntegerField()),
                ('numero_questoes', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Escola',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_escola', models.CharField(max_length=255)),
                ('censo', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_professor', models.CharField(max_length=255)),
                ('sobrenome_professor', models.CharField(max_length=255)),
                ('cpf_professor', models.CharField(max_length=14, unique=True)),
                ('email_professor', models.EmailField(max_length=255, unique=True)),
                ('senha_professor', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Questao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto_questao', models.TextField()),
                ('numero_questao', models.IntegerField()),
                ('resposta_correta', models.CharField(max_length=255)),
                ('habilidade_questao', models.CharField(blank=True, max_length=255, null=True)),
                ('observacao_pedagogica', models.TextField(blank=True, null=True)),
                ('avaliacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questoes', to='backend_avalia.avaliacao')),
            ],
        ),
        migrations.CreateModel(
            name='RespostaAluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resposta_marcada', models.CharField(max_length=255)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respostas', to='backend_avalia.aluno')),
                ('questao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respostas', to='backend_avalia.questao')),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_turma', models.CharField(max_length=255)),
                ('ano', models.IntegerField()),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turmas', to='backend_avalia.escola')),
            ],
        ),
        migrations.AddField(
            model_name='aluno',
            name='turma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alunos', to='backend_avalia.turma'),
        ),
        migrations.CreateModel(
            name='AlunoAvaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='backend_avalia.aluno')),
                ('avaliacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alunos', to='backend_avalia.avaliacao')),
            ],
            options={
                'unique_together': {('aluno', 'avaliacao')},
            },
        ),
        migrations.CreateModel(
            name='ProfessorTurma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turmas', to='backend_avalia.professor')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professores', to='backend_avalia.turma')),
            ],
            options={
                'unique_together': {('professor', 'turma')},
            },
        ),
    ]
